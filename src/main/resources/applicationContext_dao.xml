<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
<!--    1 读取数据库属性配置文件-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>
<!--    2 创建数据源-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="driverClassName" value="${jdbc.driver}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
<!--    3 创建SqlSessionFactoryBean-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
<!--        拿到之前配置的数据源信息-->
        <property name="dataSource" ref="dataSource"></property>
<!--        取mybatis的核心配置文件-->
        <property name="configLocation" value="classpath:SqlMapConfig.xml"></property>
<!--        配置实体类-->
        <property name="typeAliasesPackage" value="com.hnuc.pojo"></property>
    </bean>
<!--    4 创建mapper文件扫描器（因为spring将mybatis大部分功能接管过来
         所有之前在mybatis中的配置信息，也将由spring来负责
         mapper文件也是mybatis核心配置文件里的内容，这里将其单独拿出来配置。）-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.hnuc.mapper"></property>
<!--        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>-->

    </bean>
</beans>